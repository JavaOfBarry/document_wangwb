一、  概述 
消息队列种类繁多，例如RabbitMQ、ActiveMQ、ZeroMQ、Kafka等。本期主要介绍RabbitMQ。RabbitMQ是一个消息中间件，它的工作就是发送和接收消息。主要使用场景有：异步处理、应用解耦、流量消峰及消息通讯等。RabbitMQ采用Erlang语言，基于AMQP(Advanced Message Queue Protocol 高级消息队列协议)的开源实现。
AMQP是一个提供统一消息服务的应用层标准协议，基于此协议的客户端与消息中间件可传递消息，不受开发语言、MQ产品的限制。
二、  基本概念
消息生产者Producer:发送消息至消息队列。
消息消费者Consumer:从消息队列接收消息。
消息队列Queue：一个先进先出FIFO的消息存储区域。消息按照顺序发送、接收，一旦消息被消费处理，该消息将从队列中删除。
主题Topic：支持消息多个订阅者的机制。
生产者、消费者和RabbitMQ可以部署至不同的机器，底层通讯默认使用的是TCP Socket连接。

三、  RabbitMQ 基本组成
打开RabbitMQ监控管理界面，可以看到RabbitMQ由很多不同的部分组成：
  

Connection:连接，位于客户端和Broker之间的TCP连接
Channel:信道，仅仅创建客户端和Broker之间的连接后，客户端还不能发送消息。需要为每一个Connection创建Channel，AMQP协议只有通过 Channel才能执行AMQP命令。一个Connection可以包含多个Channel。
Exchange:接收生产者发送的消息，并根据Binding规则将消息路由给服务器中的队列。Exchange类型有direct、Fanout和Topic、headers，不同类型的Exchange路由的行为不同。其中发布订阅模型设定的Exchange Type即为Topic，点对点的队列Queue的Exchange Type为direct。
Queue：消息队列，用于存储还未被消费者消费的消息。
Broker：MQ节点，接受客户端连接，实现AMQP消息队列和路由功能的进程。
Binding:联系Exchange与Message Queue。Exchange在与多个Message Queue发生Binding后会生成一张路由表，路由表中存储着Message Queue所需消息的限制条件即RoutingKey。当Exchange收到Message时会解析其Header得到Routing Key，Exchange根据Routing Key与Exchange Type将Message路由到Message Queue。Binding Key由Consumer在绑定Exchange与Message Queue时指定，而Routing Key由Producer发送Message时指定，两者的匹配方式由Exchange Type决定。
四、  消息发送模式
1.  点对点/队列消息模型(Queue)
生产者向一个特定的队列发送消息，消费者从该队列中接收消息；消息的生产者和消费者可以不同时处于运行状态，即点对点/队列消息模型支持消息的持久化。每一个成功处理的消息都由消息消费者签收确认(Acknowledge)。
 
2.  发布订阅消息模型(Topic)
发布订阅模型，支持向一个特定的消息主题Topic发布消息，0或多个订阅者可能对接收来自特定消息主题的消息感兴趣。在这种模型下，发布者和订阅者彼此不知道对方的存在。但消息接收在发布者和订阅者之间存在时间依赖性，即必须先订阅，再发送消息，然后接收订阅的消息，此顺序必须保证。
 
五、  消息确认(ACK)与拒绝(Reject)
消息确认：为了保证消息不丢失，RabbitMQ提供了消息确认Acknowledge机制，即ACK机制，RabbitMQ提供两种确认机制：自动确认和手工确认。
对于自动确认机制，如果消费者从队列中获取到消息，那么RabbitMQ 会自动将该消息标记为已确认，从队列中删除该消息。假如消费者在处理消息过程中宕机或异常关闭，那么该消息将会丢失。
对于手工确认机制，当Consumer确认消息已经被消费处理，发送一个ACK给消息队列，此时消息队列便可以删除这个消息。如果Consumer宕机/关闭，没有发送ACK，消息队列认为这个消息没有被处理，会将这个消息重新发给其他的Consumer重新消费处理。
因此，消息的ACK机制是面向消息的消费而言。如果消息未ACK，只有在当前Consumer关闭后，其他的Consumer才能继续消费这个消息。
ACK机制：
AutoAcknowledge:消息自动确认
IndividualAcknowledge:消息显式逐条确认

消息拒绝:在消费端接收到消息后，如果想明确拒绝当前的消息而不是确认，通过basicReject(long deliverTag,bool requeue) 方法显式的拒绝该消息执行。如果requeue参数设置为false，则RabbitMQ会把消息从队列中移除；如果requeue参数设置为true，则会重新将这条消息存入队列。
六、  操作命令
RabbitMQ不但提供了监控管理界面，并且提供了完善的执行命令，用来查看其运行状态及操作，熟练的使用命令，是快速查看RabbitMQ执行情况的良好方式。在RabbitMQ安装完成后，从开始菜单->RabbitMQ Server->RabbitMQ Command Prompt (sbin dir) 打开控制台
rabbitmqctl status:查看服务器状态
rabbitmqctl list_queues:查看队列信息
rabbitmqctl list_exchanges:查看exchange信息
rabbitmqctl list_bindings:查看binding信息
rabbitmqctl list_connections:查看连接信息
rabbitmqctl list_channels :查看channel信息
rabbitmqctl add_user userName password
rabbitmqctl change_password userName newPassword
rabbitMQctl join_cluster rabbitMQ_Node_name:将某个节点添加至集群
rabbitmqctl forget_cluster rabbitMQ_Node_Name:将某个节点从集群中移除